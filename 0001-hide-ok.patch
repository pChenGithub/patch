From 9520fe815606921275f4791760cc200a1de79258 Mon Sep 17 00:00:00 2001
From: marui <892140462@qq.com>
Date: Sat, 15 Sep 2018 00:29:16 +0800
Subject: [PATCH] hide ok

---
 base/api/current.txt                               |  3 +
 base/api/system-current.txt                        |  3 +
 base/core/java/android/provider/Settings.java      |  8 +++
 .../android/providers/settings/DatabaseHelper.java |  5 ++
 .../android/systemui/statusbar/phone/PanelBar.java | 13 +++-
 .../systemui/statusbar/phone/PhoneStatusBar.java   | 46 ++++++++++++
 .../statusbar/phone/PhoneStatusBarView.java        | 15 +++-
 .../android/server/policy/PhoneWindowManager.java  | 81 +++++++++++++++++++++-
 8 files changed, 170 insertions(+), 4 deletions(-)

diff --git a/base/api/current.txt b/base/api/current.txt
index 271ff7b..8f4dcba 100755
--- a/base/api/current.txt
+++ b/base/api/current.txt
@@ -26727,7 +26727,10 @@ package android.provider {
     field public static final java.lang.String DEBUG_APP = "debug_app";
     field public static final java.lang.String DEVELOPMENT_SETTINGS_ENABLED = "development_settings_enabled";
     field public static final java.lang.String DEVICE_PROVISIONED = "device_provisioned";
+    field public static final java.lang.String DROP_STATUSBAR = "drop_statusbar";
     field public static final java.lang.String ETHERNET_ON = "ethernet_on";
+    field public static final java.lang.String HIDE_NAVBAR = "hide_navbar";
+    field public static final java.lang.String HIDE_STATUSBAR = "hide_statusbar";
     field public static final java.lang.String HTTP_PROXY = "http_proxy";
     field public static final deprecated java.lang.String INSTALL_NON_MARKET_APPS = "install_non_market_apps";
     field public static final java.lang.String MODE_RINGER = "mode_ringer";
diff --git a/base/api/system-current.txt b/base/api/system-current.txt
index f6cf6fa..5aacb41 100755
--- a/base/api/system-current.txt
+++ b/base/api/system-current.txt
@@ -28785,7 +28785,10 @@ package android.provider {
     field public static final java.lang.String DEBUG_APP = "debug_app";
     field public static final java.lang.String DEVELOPMENT_SETTINGS_ENABLED = "development_settings_enabled";
     field public static final java.lang.String DEVICE_PROVISIONED = "device_provisioned";
+    field public static final java.lang.String DROP_STATUSBAR = "drop_statusbar";
     field public static final java.lang.String ETHERNET_ON = "ethernet_on";
+    field public static final java.lang.String HIDE_NAVBAR = "hide_navbar";
+    field public static final java.lang.String HIDE_STATUSBAR = "hide_statusbar";
     field public static final java.lang.String HTTP_PROXY = "http_proxy";
     field public static final deprecated java.lang.String INSTALL_NON_MARKET_APPS = "install_non_market_apps";
     field public static final java.lang.String MODE_RINGER = "mode_ringer";
diff --git a/base/core/java/android/provider/Settings.java b/base/core/java/android/provider/Settings.java
index 8225acf..8784b38 100644
--- a/base/core/java/android/provider/Settings.java
+++ b/base/core/java/android/provider/Settings.java
@@ -2390,6 +2390,8 @@ public final class Settings {
          */
         public static final String DISPLAY_ADAPTION_MODE = "display_adaption_mode";
 
+
+
         /**
          * Name of an application package to be debugged.
          *
@@ -6090,6 +6092,12 @@ public final class Settings {
         @SystemApi
         public static final String THEATER_MODE_ON = "theater_mode_on";
 
+             //marui 
+        public static final String HIDE_STATUSBAR = "hide_statusbar";  
+        public static final String DROP_STATUSBAR = "drop_statusbar"; 
+        public static final String HIDE_NAVBAR = "hide_navbar";
+//marui
+
         /**
          * Constant for use in AIRPLANE_MODE_RADIOS to specify Bluetooth radio.
          */
diff --git a/base/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java b/base/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java
index 9bf8334..8d8f417 100644
--- a/base/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java
+++ b/base/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java
@@ -2722,6 +2722,11 @@ class DatabaseHelper extends SQLiteOpenHelper {
             loadSetting(stmt, Settings.Global.DEFAULT_INSTALL_LOCATION,
                     PackageHelper.APP_INSTALL_AUTO);
 
+
+            loadSetting(stmt, Settings.Global.HIDE_STATUSBAR, 1);
+            loadSetting(stmt, Settings.Global.DROP_STATUSBAR, 1);
+            loadSetting(stmt, Settings.Global.HIDE_NAVBAR, 1);
+
             // Set default cdma emergency tone
             loadSetting(stmt, Settings.Global.EMERGENCY_TONE, 0);
 
diff --git a/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PanelBar.java b/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PanelBar.java
index e1a400d..6e6088a 100644
--- a/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PanelBar.java
+++ b/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PanelBar.java
@@ -23,6 +23,9 @@ import android.view.MotionEvent;
 import android.view.View;
 import android.widget.FrameLayout;
 
+import android.provider.Settings;  
+import android.content.ContentResolver; 
+
 import java.util.ArrayList;
 
 public abstract class PanelBar extends FrameLayout {
@@ -39,6 +42,8 @@ public abstract class PanelBar extends FrameLayout {
     public static final int STATE_OPENING = 1;
     public static final int STATE_OPEN = 2;
 
+    private Context mContext;//add by marui
+
     PanelHolder mPanelHolder;
     ArrayList<PanelView> mPanels = new ArrayList<PanelView>();
     PanelView mTouchingPanel;
@@ -54,6 +59,7 @@ public abstract class PanelBar extends FrameLayout {
 
     public PanelBar(Context context, AttributeSet attrs) {
         super(context, attrs);
+        mContext = context;
     }
 
     @Override
@@ -99,7 +105,12 @@ public abstract class PanelBar extends FrameLayout {
 
     public PanelView selectPanelForTouch(MotionEvent touch) {
         final int N = mPanels.size();
-        return mPanels.get((int)(N * touch.getX() / getMeasuredWidth()));
+       // return mPanels.get((int)(N * touch.getX() / getMeasuredWidth()));
+       int dropstatus = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.DROP_STATUSBAR,0);  
+        if(dropstatus == 1) //add by marui 
+            return null;//modify by marui  
+        else  
+         return mPanels.get((int)(N * touch.getX() / getMeasuredWidth()));
     }
 
     public boolean panelsEnabled() {
diff --git a/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java b/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
index 32d0bac..ec586ad 100644
--- a/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
+++ b/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
@@ -189,6 +189,12 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         DragDownHelper.DragDownCallback, ActivityStarter, OnUnlockMethodChangedListener,
         HeadsUpManager.OnHeadsUpChangedListener {
     static final String TAG = "PhoneStatusBar";
+
+    public static String ACTION_SHOW_STATUS_BAR = "marui.action.show_status_bar";  
+    public static String ACTION_HIDE_STATUS_BAR = "marui.action.hide_status_bar";  
+    public static String ACTION_HIDE_NAV_BAR   = "marui.action.hide_nav_bar";
+    public static String ACTION_SHOW_NAV_BAR   = "marui.action.show_nav_bar";
+
     public static final boolean DEBUG = BaseStatusBar.DEBUG;
     public static final boolean SPEW = false;
     public static final boolean DUMPTRUCK = true; // extra dumpsys info
@@ -2819,6 +2825,16 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         makeStatusBarView();
         mStatusBarWindowManager = new StatusBarWindowManager(mContext);
         mStatusBarWindowManager.add(mStatusBarWindow, getStatusBarHeight());
+        //add by marui  
+        IntentFilter filter = new IntentFilter();  
+        //filter.addAction(ACTION_HIDE_NAV_BAR);  
+        //filter.addAction(ACTION_SHOW_NAV_BAR);  
+        filter.addAction(ACTION_SHOW_STATUS_BAR);  
+        filter.addAction(ACTION_HIDE_STATUS_BAR);  
+        mContext.registerReceiver(mHideNavBarReceiver, filter);  
+        int navcheck = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.HIDE_STATUSBAR,0);  
+        if(navcheck != 0)  
+           showStatusBar(false); 
     }
 
     // called by makeStatusbar and also by PhoneStatusBarView
@@ -3287,6 +3303,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         }
         mContext.unregisterReceiver(mBroadcastReceiver);
         mContext.unregisterReceiver(mDemoReceiver);
+
+        mContext.unregisterReceiver(mHideNavBarReceiver);//marui
+
         mAssistManager.destroy();
 
         final SignalClusterView signalCluster =
@@ -4334,4 +4353,31 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             }
         }
     }
+  //add by marui 
+   public void showStatusBar(boolean isshow) {  
+    if(mStatusBarWindow != null) {/* 
+        WindowManager.LayoutParams lp = (WindowManager.LayoutParams) mStatusBarWindow.getLayoutParams(); 
+        if(isshow) 
+            lp.height = getStatusBarHeight(); 
+        else 
+            lp.height = 0; 
+        mWindowManager.updateViewLayout(mStatusBarWindow, lp);*/  
+        mStatusBarWindow.setVisibility(isshow ? View.VISIBLE : View.GONE);  
+      }  
+  }  
+  
+   BroadcastReceiver mHideNavBarReceiver = new BroadcastReceiver() {  
+       @Override  
+       public void onReceive(Context context, Intent intent) {  
+        if(intent.getAction().equals(ACTION_HIDE_NAV_BAR)) {  
+            //hideNavBar();  
+        } else if(intent.getAction().equals(ACTION_SHOW_NAV_BAR)) {  
+            //showNavBar();  
+        } else if(intent.getAction().equals(ACTION_SHOW_STATUS_BAR)) {  
+            showStatusBar(true);  
+        } else if(intent.getAction().equals(ACTION_HIDE_STATUS_BAR)) {  
+            showStatusBar(false);  
+        }  
+       }  
+   }; 
 }
diff --git a/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java b/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java
index c0887ca..d8a72c0 100644
--- a/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java
+++ b/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java
@@ -28,11 +28,15 @@ import com.android.systemui.DejankUtils;
 import com.android.systemui.EventLogTags;
 import com.android.systemui.R;
 
+import android.provider.Settings;  
+import android.content.ContentResolver;
+ 
+
 public class PhoneStatusBarView extends PanelBar {
     private static final String TAG = "PhoneStatusBarView";
     private static final boolean DEBUG = PhoneStatusBar.DEBUG;
     private static final boolean DEBUG_GESTURES = false;
-
+private Context mContext;//add by marui
     PhoneStatusBar mBar;
 
     PanelView mLastFullyOpenedPanel = null;
@@ -103,7 +107,14 @@ public class PhoneStatusBarView extends PanelBar {
     @Override
     public PanelView selectPanelForTouch(MotionEvent touch) {
         // No double swiping. If either panel is open, nothing else can be pulled down.
-        return mNotificationPanel.getExpandedHeight() > 0
+        /*return mNotificationPanel.getExpandedHeight() > 0
+                ? null
+                : mNotificationPanel;*/
+        int dropstatus = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.DROP_STATUSBAR,0);  
+        if(dropstatus == 1) //add by marui  
+            return null;//modify by marui  
+        else  
+           return mNotificationPanel.getExpandedHeight() > 0
                 ? null
                 : mNotificationPanel;
     }
diff --git a/base/services/core/java/com/android/server/policy/PhoneWindowManager.java b/base/services/core/java/com/android/server/policy/PhoneWindowManager.java
index 868c3b7..25443ed 100755
--- a/base/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/base/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -123,6 +123,9 @@ import com.android.server.LocalServices;
 import com.android.server.policy.keyguard.KeyguardServiceDelegate;
 import com.android.server.policy.keyguard.KeyguardServiceDelegate.DrawnListener;
 
+import android.provider.Settings;  
+import android.content.ContentResolver; 
+
 import java.io.File;
 import java.io.FileReader;
 import java.io.IOException;
@@ -162,6 +165,14 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     static final boolean ENABLE_CAR_DOCK_HOME_CAPTURE = true;
     static final boolean ENABLE_DESK_DOCK_HOME_CAPTURE = false;
 
+    public static String ACTION_SHOW_STATUS_BAR = "marui.action.show_status_bar";  
+    public static String ACTION_HIDE_STATUS_BAR = "marui.action.hide_status_bar";
+    public static String ACTION_HIDE_NAV_BAR = "marui.action.hide_nav_bar";  
+    public static String ACTION_SHOW_NAV_BAR = "marui.action.show_nav_bar"; 
+    int[] oNavigationBarHeightForRotation = new int[4];  
+    int[] oNavigationBarWidthForRotation = new int[4];  
+    int oStatusBarHeight;//add by marui
+
     static final int SHORT_PRESS_POWER_NOTHING = 0;
     static final int SHORT_PRESS_POWER_GO_TO_SLEEP = 1;
     static final int SHORT_PRESS_POWER_REALLY_GO_TO_SLEEP = 2;
@@ -1492,6 +1503,14 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         filter.addAction(Intent.ACTION_DREAMING_STOPPED);
         context.registerReceiver(mDreamReceiver, filter);
 
+       filter = new IntentFilter();
+       filter.addAction(ACTION_SHOW_STATUS_BAR);  
+       filter.addAction(ACTION_HIDE_STATUS_BAR);
+       filter.addAction(ACTION_HIDE_NAV_BAR);  
+       filter.addAction(ACTION_SHOW_NAV_BAR);
+       context.registerReceiver(mHideNavBarReceiver, filter);  
+
+
         // register for multiuser-relevant broadcasts
         filter = new IntentFilter(Intent.ACTION_USER_SWITCHED);
         context.registerReceiver(mMultiuserReceiver, filter);
@@ -3768,7 +3787,27 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 updateSystemUiVisibilityLw();
             }
         }
-    }
+         //marui  
+       int navcheck = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.HIDE_STATUSBAR,0);  
+       if(navcheck != 0)  
+         showStatusBar(false);
+       navcheck = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.HIDE_NAVBAR,0);  
+        if(navcheck != 0)  
+            hideNavBar(); 
+         //marui end
+    }
+
+    public void showStatusBar(boolean isshow) {  
+       if(isshow) {  
+         mStatusBarHeight = oStatusBarHeight;  
+        } else {  
+          if(mStatusBarHeight == 0)  
+              return;  
+          oStatusBarHeight = mStatusBarHeight;  
+           mStatusBarHeight = 0;  
+        }  
+       updateRotation(false);  
+      }  
 
     /** {@inheritDoc} */
     @Override
@@ -7095,4 +7134,44 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             mKeyguardDelegate.dump(prefix, pw);
         }
     }
+//add by marui  
+public void hideNavBar() {  
+    //Slog.d(TAG,"hideNavBar");  
+    if((mNavigationBarHeightForRotation[mPortraitRotation] == 0)  
+        && (mNavigationBarHeightForRotation[mUpsideDownRotation] == 0)  
+        && (mNavigationBarHeightForRotation[mLandscapeRotation] == 0)  
+        && (mNavigationBarHeightForRotation[mSeascapeRotation] == 0))  
+        return;  
+    else {  
+        oNavigationBarHeightForRotation = mNavigationBarHeightForRotation;  
+        oNavigationBarWidthForRotation = mNavigationBarWidthForRotation;  
+        mNavigationBarHeightForRotation = new int[4];  
+        mNavigationBarWidthForRotation = new int[4];  
+    }  
+    updateRotation(false);  
+}  
+  
+public void showNavBar() {  
+    //Slog.d(TAG,"showNavBar");  
+    mNavigationBarHeightForRotation = oNavigationBarHeightForRotation;  
+    mNavigationBarWidthForRotation = oNavigationBarWidthForRotation;  
+    updateRotation(false);  
+}  
+//add by marui 
+    BroadcastReceiver mHideNavBarReceiver = new BroadcastReceiver() {  
+        @Override  
+        public void onReceive(Context context, Intent intent) {  
+            if(intent.getAction().equals(ACTION_SHOW_STATUS_BAR)) {  
+                showStatusBar(true);   
+                //Settings.Global.putInt(mContext.getContentResolver(), Settings.Global.HIDE_NAVBAR, 1);  
+            } else if(intent.getAction().equals(ACTION_HIDE_STATUS_BAR)) {  
+                showStatusBar(false); 
+                //Settings.Global.putInt(mContext.getContentResolver(), Settings.Global.HIDE_NAVBAR, 0);  
+            }else if(intent.getAction().equals(ACTION_HIDE_NAV_BAR)) {  
+                hideNavBar();   
+            } else if(intent.getAction().equals(ACTION_SHOW_NAV_BAR)) {  
+                showNavBar();  
+            }    
+        }  
+    }; 
 }
-- 
1.9.1

